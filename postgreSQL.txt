-- Connect to the database
psql -h hostname -p port -U username -d database_name

\l                //List all the db names
\c database_name  //Connect to db
\d , \dt          //List all relations in that db
\d table_name     //Give all information about the table

-- Create a database
CREATE DATABASE my_database;

-- Create a table
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50),
    email VARCHAR(100),
    age INTEGER
);

 CREATE TABLE employees (
 id BIGSERIAL primary key not null ,
 name varchar(15) not null,
 email varchar(50) not null unique,
 date_of_birth date
 );



-- Insert data
INSERT INTO users (name, email, age)
VALUES ('Alice', 'alice@example.com', 30),
       ('Bob', 'bob@example.com', 25),
       ('Charlie', 'charlie@example.com', 35);



-- Select all data
SELECT * FROM users;

-- Select specific columns
SELECT name, age FROM users;

-- Select data with a condition
SELECT * FROM users WHERE age > 30;

-- Update data
UPDATE users SET age = 32 WHERE id = 1;
UPDATE products SET stock =0 WHERE stock IS NULL;
UPDATE products SET stock =NULL WHERE stock=0;
UPDATE employees SET name='doe',email='doe@gmail.com',dob='1995-05-12' WHERE id=4;

--UPSERT DATA (WHEN CONFLICT ARRIVES)  // 1.DO NOTHING  2.DO UPDATE
1.DO NOTHING
  INSERT INTO employees (name,email,dob,age,gender,salary) VALUES ('doe','doe@gmail.com','1992-05-12',32,'Male',67000) ON CONFLICT (name) DO NOTHING;
2.DO UPDATE
  INSERT INTO employees (name,email,dob,age,gender,salary) VALUES ('doe','doe@gmail.com','1992-05-12',32,'Male',67000) ON CONFLICT (name) DO UPDATE SET salary=EXCLUDED.salary,dob=EXCLUDED.dob;  


-- Delete data
DELETE FROM users ;   ///  DELETE ALL THE DATA IN THAT TABLE IF NOT USED A WHERE CONDITION
DELETE FROM users WHERE id = 3;
DELETE FROM employees WHERE id IN (5,6);




  --DISTINCT (for getting unique values in an field)
    SELECT DISTINCT data_of_birth FROM employees;


  --ALTER TABLE (To make changes in table)
    ALTER TABLE employees ADD COLUMN age INTEGER;
    ALTER TABLE employees RENAME COLUMN data_of_birth TO dob;

  --FETCH data (Based on different conditions)
    SELECT * FROM employees where gender='male';
    SELECT * FROM employees where gender='male' AND age<30;
    SELECT * FROM employees where gender='male' OR age>60;

  --LIMIT &&  OFFSET
    SELECT * FROM employees LIMIT 5; //  SELECT * FROM employees LIMIT(3); 
    SELECT * FROM employees OFFSET(3);
    SELECT * FROM employees OFFSET(2) LIMIT(2);
    SELECT * FROM employees OFFSET(2) FETCH FIRST 2 ROWS ONLY;

  --IN BETWEEN LIKE ILIKE
    SELECT * FROM employees WHERE gender IN ('male','female');
    SELECT * FROM employees WHERE age IN (22,52,17);

    SELECT * FROM employees WHERE age BETWEEN 25 AND 50;      // ALTERNATIVE FOR THIS (SELECT * FROM employees WHERE age<50 and age>25;)
    SELECT * FROM employees WHERE age NOT BETWEEN 25 AND 50;



  -- COALESCE KEYWORD (TO SHOW DEFAULT VALUE IN A NULL PLACE) 
    SELECT product_name, price ,COALESCE(stock,0)FROM products;



  -- CASE STATEMENT IN QUERY ()
      company=# SELECT name,age,
      company-# CASE
      company-# WHEN age <20 THEN 'under 20'
      company-# WHEN age BETWEEN 20 AND 30 THEN 'BETWEEN 20 & 30'
      company-# WHEN age BETWEEN 30 AND 40 THEN 'BETWEEN 30 & 40'
      company-# ELSE 'Above 40'
      company-# END as AGE_CATEGORY
      company-# FROM employees;

        name   | age |  age_category
      ----------+-----+-----------------
      faizal23 |  34 | BETWEEN 30 & 40
      faizal2  |  22 | BETWEEN 20 & 30
      faizal1  |  28 | BETWEEN 20 & 30
      user1    |  24 | BETWEEN 20 & 30
      user2    |  24 | BETWEEN 20 & 30
      john     |  17 | under 20
      doe      |  52 | Above 40
      (7 rows)


